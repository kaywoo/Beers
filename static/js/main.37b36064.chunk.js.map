{"version":3,"sources":["components/Home.js","components/About.js","components/List.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","React","Component","About","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","_this2","fetch","then","response","json","tempArray","forEach","element","tempObj","name","image","src","image_url","style","height","alt","tagline","push","setState","_this3","dist_default","title","columns","field","editable","onRowAdd","newData","Promise","resolve","setTimeout","toConsumableArray","objectSpread","onRowUpdate","oldData","indexOf","onRowDelete","splice","List","beers","e","target","classList","toggle","Header","accessor","Cell","row","value","onClick","id","filterable","d","filterMethod","filter","rows","matchSorter","keys","filterAll","className","class","es","defaultPageSize","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","App","_React$useState","useState","_React$useState2","slicedToArray","anchorEl","setAnchorEl","handleClose","classes","react_router_dom","AppBar","position","Toolbar","variant","Button","aria-owns","undefined","aria-haspopup","event","currentTarget","Menu_default","Menu","open","Boolean","onClose","MenuItem","to","SvgIcon","icon","react_router","exact","path","component","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.37b36064.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Home extends React.Component {\r\n  render () {\r\n    return (\r\n      <div>Home</div>\r\n    )\r\n\r\n\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\n\r\nclass About extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    fetch('https://api.punkapi.com/v2/beers?page=1&per_page=80')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      let tempArray = [];\r\n      data.forEach(element => {\r\n        let tempObj = {};\r\n        tempObj.name = element.name;\r\n        tempObj.image = <img src={element.image_url} style={{height: '50px'}} alt={element.image_url}></img>;\r\n        tempObj.tagline = element.tagline;\r\n        tempArray.push(tempObj);\r\n      });\r\n      this.setState({data: tempArray})\r\n      \r\n    });\r\n      \r\n  }\r\n  render () {\r\n    \r\n\r\n    const columns = [\r\n      { title: 'Image', field: 'image' },\r\n      { title: 'Name', field: 'name' },\r\n      { title: 'Tagline', field: 'tagline'},\r\n    ]\r\n\r\n\r\n      return (\r\n          <div> \r\n            <MaterialTable\r\n              title=\"Editable Example\"\r\n              columns={columns}\r\n              data={this.state.data}\r\n              editable={{\r\n                onRowAdd: newData =>\r\n                  new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                      resolve();\r\n                      const data = [...this.state.data];\r\n                      data.push(newData);\r\n                      this.setState({ ...this.state, data });\r\n                    }, 600);\r\n                  }),\r\n                onRowUpdate: (newData, oldData) =>\r\n                  new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                      resolve();\r\n                      const data = [...this.state.data];\r\n                      data[data.indexOf(oldData)] = newData;\r\n                      this.setState({ ...this.state, data });\r\n                    }, 600);\r\n                  }),\r\n                onRowDelete: oldData =>\r\n                  new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                      resolve();\r\n                      const data = [...this.state.data];\r\n                      data.splice(data.indexOf(oldData), 1);\r\n                      this.setState({ ...this.state, data });\r\n                    }, 600);\r\n                  }),\r\n              }}\r\n        /></div>\r\n\r\n      )\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport matchSorter from 'match-sorter';\r\nimport 'react-table/react-table.css';\r\n\r\n\r\n\r\nclass List extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        beers: [],\r\n      }\r\n    }\r\n  \r\n    componentDidMount() {\r\n      fetch('https://api.punkapi.com/v2/beers?page=1&per_page=80')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({beers: data})\r\n        \r\n      });\r\n        \r\n    }\r\n\r\n    onClick(e) {\r\n      e.target.classList.toggle('red');\r\n      // if (e.target.classList.contains('red')) {\r\n      //     e.target.classList.remove('red')\r\n      // } else{\r\n      //   e.target.classList.add(\"red\");\r\n      // }\r\n    }\r\n\r\n    render() {\r\n      const columns = [{\r\n        Header: 'Image',\r\n        accessor: 'image_url',\r\n        Cell: row => <img src={row.value} style={{height: '100px'}} alt={row.value} onClick={this.onClick}></img>\r\n      },{\r\n        Header: 'Name',\r\n        id:\"name\",\r\n        filterable: true,\r\n        accessor: d => d.name,\r\n        filterMethod: (filter, rows) => matchSorter(rows, filter.value, { keys: ['name']}),\r\n        filterAll: true\r\n      },{\r\n        Header: 'Tagline',\r\n        accessor: 'tagline'\r\n      \r\n        \r\n      }]\r\n      return (\r\n        <div className=\"beers\">\r\n          <header class=\"header\"><h2>Beers List</h2></header>\r\n          <ReactTable data={this.state.beers} columns={columns} defaultPageSize={10}/>\r\n        </div>\r\n      )\r\n    }\r\n\r\n}\r\n\r\nexport default List;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\nimport Home from './components/Home';\nimport About from './components/About';\nimport List from './components/List';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport './App.css';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nfunction App() {\n  \n  const [anchorEl, setAnchorEl] = React.useState(null);\n  \n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n  \n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  function HomeIcon(props) {\n    return (\n      <SvgIcon {...props}>\n        <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\n      </SvgIcon>\n    );\n  }\n\n  const classes = useStyles();\n  return (\n    <Router>\n       <div className={classes.root + \" App\"}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <Button aria-owns={anchorEl ? 'simple-menu' : undefined} aria-haspopup=\"true\" onClick={handleClick}>\n            <MenuIcon />\n          </Button>\n          <Menu id=\"simple-menu\" anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleClose}>\n            <MenuItem onClick={handleClose}><Link to={'/'}><HomeIcon className={classes.icon}/></Link></MenuItem>\n            <MenuItem onClick={handleClose}><Link to={'/list'}>List of our Beers</Link></MenuItem>\n            <MenuItem onClick={handleClose}><Link to={'About'}>About Us</Link></MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n      <Switch>\n        <Route exact path='/'component={Home}/>\n        <Route path='/about' component={About}/>\n        <Route path='/list' component={List}/>\n      </Switch>\n      </div>\n    </Router> \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}